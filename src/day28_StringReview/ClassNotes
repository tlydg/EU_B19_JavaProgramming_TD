  /*
  1-
    Given a string and an int n, return a string made of the first
    and last n chars from the string. The string length will be at least n.

    nTwice("Hello", 2) → "Helo"
    nTwice("Chocolate", 3) → "Choate"
    nTwice("Chocolate", 1) → "Ce"

    2-
     Return true if the string "cat" and "dog" appear the same number of times in the given string.

        catDog("catdog") → true
        catDog("catcat") → false
        catDog("1cat1cadodog") → true
        catDog("catcatdogdog") → true

        3-
        // count zeros between 1's.
        //"100000000001" -> 10
        //"10001" -> 3

        4-
         * Given a string s, find the length of the longest
             * substring
             * without repeating characters.
             * <p>
             * Example 1:
             * <p>
             * Input: s = "abcabcbb"
             * Output: 3
             * Explanation: The answer is "abc", with the length of 3.
             * Example 2:
             * <p>
             * Input: s = "bbbbb"
             * Output: 1
             * Explanation: The answer is "b", with the length of 1.
             * Example 3:
             * <p>
             * Input: s = "pwwkew"
             * Output: 3
             * Explanation: The answer is "wke", with the length of 3.
             * Input: s = "pwrwkew"
             * Output: 4
             * Explanation: The answer is "rwke", with the length of 3.
     */